@model Asp.NETMVCCRUD.Models.contingencias
@{
    Layout = null;
}

@using (Html.BeginForm("AddOrEdit", "Employee", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(model => model.idcontingencia)
    <div class="form-group">
        @Html.LabelFor(model => model.tipo, new { @class = "control-label" })
        @Html.EditorFor(model => model.tipo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.tipo)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.proceso, new { @class = "control-label" })
        @Html.EditorFor(model => model.proceso, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.proceso)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.zona, new { @class = "control-label" })
        @Html.EditorFor(model => model.zona, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.zona)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.circuito, new { @class = "control-label" })
        @Html.EditorFor(model => model.circuito, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.circuito)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.categoria, new { @class = "control-label" })
        @Html.EditorFor(model => model.categoria, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.categoria)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.noeconomico, new { @class = "control-label" })
        @Html.EditorFor(model => model.noeconomico, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.noeconomico)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.rpe, new { @class = "control-label" })
        @Html.EditorFor(model => model.rpe, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.rpe)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.nombre, new { @class = "control-label" })
        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.nombre)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.entrada, new { @class = "control-label" })
        @Html.EditorFor(model => model.entrada, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.entrada)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.salida, new { @class = "control-label" })
        @Html.EditorFor(model => model.salida, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.salida)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.tiempo, new { @class = "control-label" })
        @Html.EditorFor(model => model.tiempo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.tiempo)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.activo, new { @class = "control-label" })
        @Html.EditorFor(model => model.activo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.activo)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.actividad, new { @class = "control-label" })
        @Html.EditorFor(model => model.actividad, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.actividad)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.supervisor, new { @class = "control-label" })
        @Html.EditorFor(model => model.supervisor, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.supervisor)
    </div>


    <div class="form-group">
        <input type="submit" value="Submit" class="btn btn-primary" />
        <input type="reset" value="Reset" class="btn" />
    </div>
}